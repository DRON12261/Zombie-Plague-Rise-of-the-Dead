
/******************************************************************************/
// If you change one of the following settings, do not forget to recompile
// the plugin and to install the new .amx file on your server.

// Uncomment the following line to force the NO_STEAM support for this plugin (CS 1.5).
//#define NO_STEAM

/******************************************************************************/

#include <amxmod>
#include <VexdUM>

const HUD_HIDE_CAL = 1<<0
const HUD_HIDE_FLASH = 1<<1
const HUD_HIDE_ALL = 1<<2	
const HUD_HIDE_RHA = 1<<3
const HUD_HIDE_TIMER = 1<<4
const HUD_HIDE_MONEY = 1<<5
const HUD_HIDE_CROSS = 1<<6
const HUD_DRAW_CROSS = 1<<7

const HIDE_GENERATE_CROSSHAIR = HUD_HIDE_FLASH|HUD_HIDE_RHA|HUD_HIDE_TIMER|HUD_HIDE_MONEY|HUD_DRAW_CROSS

#if !defined NO_STEAM
	#define EXTRA_OFFSET 0
#else
	#define EXTRA_OFFSET 4
#endif

#define m_iHideHUD			361 + EXTRA_OFFSET
#define m_iClientHideHUD		362 + EXTRA_OFFSET

enum _:Hide_Hud {
	Hide_Cal,
	Hide_Flash,
	Hide_All,
	Hide_Rha,
	Hide_Timer,
	Hide_Money,
	Hide_Cross,
	Draw_Cross
}

new g_bitHudFlags

new g_pCvars[Hide_Hud]
#if defined NO_STEAM
new g_cvarMpFreezeTime
#endif

public plugin_init() 
{ 
	register_plugin("HUD Customizer", "0.6", "Igoreso/ConnorMcLeod") 
	
	g_pCvars[Hide_Cal] = register_cvar("amx_hud_hide_ammo_cross_wplist", "0")
	g_pCvars[Hide_Flash] = register_cvar("amx_hud_hide_flashlight", "0")
	g_pCvars[Hide_All] = register_cvar("amx_hud_hide_all", "0")
	g_pCvars[Hide_Rha] = register_cvar("amx_hud_hide_radar_health_armor", "1")
	g_pCvars[Hide_Timer] = register_cvar("amx_hud_hide_timer", "0")
	g_pCvars[Hide_Money] = register_cvar("amx_hud_hide_money", "0")
	g_pCvars[Hide_Cross] = register_cvar("amx_hud_hide_crosshair", "0")
	g_pCvars[Draw_Cross] = register_cvar("amx_hud_draw_crosshair", "0")

	#if !defined NO_STEAM
	register_event("HLTV", "Event_New_Round", "a", "1=0", "2=0")
	#else
	register_event("RoundTime", "Event_New_Round", "bc")
	g_cvarMpFreezeTime = get_cvar_pointer("mp_freezetime")
	#endif

	register_event("ResetHUD", "Event_ResetHUD", "bef")
	register_event("HideWeapon", "Event_HideWeapon", "b")

	Event_New_Round()
}

public Event_New_Round()
{
	#if defined NO_STEAM
	if(!(read_data(1) == get_cvarptr_num(g_cvarMpFreezeTime)))
		return
	#endif

	g_bitHudFlags = 0
	for(new i; i < Hide_Hud; i++)
	{
		if(get_cvarptr_num(g_pCvars[i]) > 0)
		{
			g_bitHudFlags |= (1<<i)
		}
	}
}

public Event_ResetHUD(id)
{
	if(g_bitHudFlags)
	{
		set_offset_int(id, m_iClientHideHUD, 0)
		set_offset_int(id, m_iHideHUD, g_bitHudFlags)
	}
}

public Event_HideWeapon(id)
{
	new iFlags = read_data(1)
	if(g_bitHudFlags && (iFlags & g_bitHudFlags != g_bitHudFlags))
	{
		set_offset_int(id, m_iClientHideHUD, 0)
		set_offset_int(id, m_iHideHUD, iFlags|g_bitHudFlags)
	}
}
